version: "3.9"

services:
  # watch:
  #   image: bresnow/gjsx-proxy:${VERSION:-1.8.51}
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #     labels:
  #       - traefik.enable=true
  #       - traefik.docker.network=traefik-net
  #       - traefik.constraint-label=traefik-net
  #       - traefik.http.routers.proxy-${ID:-001}.rule=Host(`${DOMAIN:-dev.cnxt.app}`)
  #       - traefik.http.routers.proxy-${ID:-001}.entrypoints=http,https
  #       - traefik.http.routers.proxy-${ID:-001}.service=proxy-${ID:-001}
  #       - traefik.http.routers.proxy-${ID:-001}.tls=true
  #       - traefik.http.routers.proxy-${ID:-001}.tls.certresolver=${TLS:-letsencrypt}
  #       - traefik.http.services.proxy-${ID:-001}.loadbalancer.server.port=8087
  #       - traefik.http.routers.gjsx-${ID:-001}.rule=Host(`${INTERFACE_DOMAIN:-interface.cnxt.app}`)
  #       - traefik.http.routers.gjsx-${ID:-001}.entrypoints=http,https
  #       - traefik.http.routers.gjsx-${ID:-001}.service=gjsx-${ID:-001}
  #       - traefik.http.routers.gjsx-${ID:-001}.tls=true
  #       - traefik.http.routers.gjsx-${ID:-001}.tls.certresolver=${TLS:-letsencrypt}
  #       - traefik.http.services.gjsx-${ID:-001}.loadbalancer.server.port=8086
  #   networks:
  #     - traefik-net
  #     - edge
  #   volumes:
  #     - ${PWD}/db:/home/proxy/db
  #     - ${PWD}/broadway-proxy:/home/proxy
  watch:
    image: bresnow/gjsx-proxy:${VERSION:-1.8.6}
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.constraint-label=traefik-net
        - traefik.http.routers.proxy-${ID:-001}.rule=Host(`${DOMAIN:-dev.cnxt.app}`)
        - traefik.http.routers.proxy-${ID:-001}.entrypoints=http,https
        - traefik.http.routers.proxy-${ID:-001}.service=proxy-${ID:-001}
        - traefik.http.routers.proxy-${ID:-001}.tls=true
        - traefik.http.routers.proxy-${ID:-001}.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.proxy-${ID:-001}.loadbalancer.server.port=8087
        - traefik.http.routers.gjsx-${ID:-001}.rule=Host(`${INTERFACE_DOMAIN:-interface.cnxt.app}`)
        - traefik.http.routers.gjsx-${ID:-001}.entrypoints=http,https
        - traefik.http.routers.gjsx-${ID:-001}.service=gjsx-${ID:-001}
        - traefik.http.routers.gjsx-${ID:-001}.tls=true
        - traefik.http.routers.gjsx-${ID:-001}.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.gjsx-${ID:-001}.loadbalancer.server.port=8086 
    ports:
      - 8002:8002
    networks:
      - traefik-net
      - edge
    volumes:
      - ${PWD}/db:/home/proxy/db
      - ${PWD}/broadway-proxy/server:/home/proxy/server
      - ${PWD}/broadway-proxy/app:/home/proxy/app
      - ${PWD}/broadway-proxy/styles:/home/proxy/styles
      - ${PWD}/broadway-proxy/build:/home/proxy/build
      - ${PWD}/broadway-proxy/public:/home/proxy/public



  core:
    image: bresnow/gjsx-core:${VERSION:-1.8.6}
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - edge
    volumes:
      - ${PWD}/gi_modules/_compiled:/home/app/_compiled
      - ${PWD}/_docker/log:/var/log/gjsx:rw



networks:
  traefik-net:
    external: true
  edge:
    external: true

