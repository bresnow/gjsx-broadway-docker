version: "3.3"

services:
  socket-proxy:
    image: bresnow/docker.sock-proxy:latest
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.constraint-label=traefik-net      
        - traefik.tcp.routers.socket-proxy-${ID:-001}.rule=HostSNI(`socket-proxy.fltngmmth.com`)
        - traefik.tcp.routers.socket-proxy-${ID:-001}.entrypoints=http
        - traefik.tcp.routers.socket-proxy-${ID:-001}.service=socket-proxy-${ID:-001}
        - traefik.tcp.routers.socket-proxy-${ID:-001}.tls=true
        - traefik.tcp.routers.socket-proxy-${ID:-001}.tls.certresolver=${TLS:-letsencrypt}
        - traefik.tcp.services.socket-proxy-${ID:-001}.loadbalancer.server.port=8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    networks:
      - socket-proxy
      - traefik-net

networks:
  traefik-net:
    external: true
  socket-proxy:
    external: true
